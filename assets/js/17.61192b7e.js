(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{150:function(e,t,n){"use strict";n.r(t);var i=n(0),a=Object(i.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"content"},[t("h3",{attrs:{id:"mobile-web-ui适配解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mobile-web-ui适配解决方案","aria-hidden":"true"}},[this._v("#")]),this._v(" mobile web ui适配解决方案")]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('(function() {\n        var d = window,\n            a = document.documentElement, // 获取根元素节点对象\n            e;\n        c();\n        a.setAttribute("data-dpr", d.devicePixelRatio);\n        d.addEventListener("resize", b, false); // 监听\n        d.addEventListener("pageshow", function(f) {\n            f.persisted && b()\n        }, false);\n\n        function b() {\n            clearTimeout(e);\n            e = setTimeout(c, 300)\n        }\n\n        function c() {\n            var f = a.getBoundingClientRect().width; //获取html元素的宽度\n            if (f <= 750) {\n                d.rem = a.getBoundingClientRect().width / 10 \n                设置根节点的字体大小，也就是rem， 如果html的宽度小于750（750是设计稿的大小）\n                则rem = 根元素的宽度/10 ， 那么10rem就等于设计稿的最大宽度750px。当对一元素设置css的时候，比如设计稿中给出的宽度是750，则等于 (750/75) = 10rem   这个函数可以公式可以使用sass写一个。\n            } else {\n                d.rem = 75;\n                如果大于750px，则将rem设置为75， 这样页面在大于750px，也只显示750像素大小\n            }\n            a.style.fontSize = d.rem + "px"\n        }\n    })();\n')])])]),t("h3",{attrs:{id:"react-native-ui-适配解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react-native-ui-适配解决方案","aria-hidden":"true"}},[this._v("#")]),this._v(" react native ui 适配解决方案")]),t("p",[this._v("虽然各个设备的屏幕大小不同，但是设计元素所占的比例是相同的")]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("import { Dimensions } from 'react-native';\n\n// 设备宽度，单位 dp\nconst deviceWidthDp = Dimensions.get('window').width;\n\n// 设计稿宽度（这里为640px），单位 px\nconst uiWidthPx = 640;\n\n// px 转 dp（设计稿中的 px 转 rn 中的 dp）\nexport const pTd = (uiElePx) => {\n  return uiElePx * deviceWidthDp / uiWidthPx;\n}\n")])])])])}],!1,null,null,null);t.default=a.exports}}]);