(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{161:function(a,n,t){"use strict";t.r(n);var e=t(0),l=Object(e.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,n=a.$createElement,t=a._self._c||n;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"canvas的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#canvas的使用","aria-hidden":"true"}},[a._v("#")]),a._v(" Canvas的使用")]),t("h2",{attrs:{id:"绘制柱状图表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#绘制柱状图表","aria-hidden":"true"}},[a._v("#")]),a._v(" 绘制柱状图表")]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('var data = [ 16, 68, 20, 30, 54 ]; 模拟数据\n\nvar canvas = document.getElementById(\'canvas\') 获取当前界面的canvas元素\nlet c = canvas.getContext(\'2d\'); 使用getContent方法来创建canvas画板\nc.fillStyle = \'gray\' 为画板填充灰色\nc.fillRect(0,0,500,500)设置画板的大小  参数依次是： 左边距、上边距、长、高\n\n在使用fillReact后，一个canvas画板就渲染完成，然后接下来所有的更改都不会影响这个画板的显示（比如： 填充色变化等）\n\nc.fillStyle = "blue"; \nfor(var i=0; i<data.length; i++) { \n    var dp = data[i]; \n    // c.fillRect(25 + i*100, 30, 50, dp*5); 以左边距25位起始位置，每个元素之间相隔100，上边距为30，长为50 高度用数值来确定\n    c.fillRect(25 + i*100, 500-dp*5 - 30 , 50, dp*5); \n} \n这样5条蓝色的条状图就渲染完成\nc.fillStyle = "black"; \nc.lineWidth = 2.0; 设置线的宽度为2\nc.beginPath(); 开始绘制线\nc.moveTo(30,10); \nc.lineTo(30,460); \nc.lineTo(490,460); \nc.stroke(); 填充路径\nc.fillStyle = "black"; \nfor(var i=0; i<6; i++) { \n    c.fillText((5-i)*20 + "",4, i*80+60); 填充文字  文字内容为index*20， 左边距是4，上边距是index*80 +60\n    c.beginPath(); \n    c.moveTo(25,i*80+60); 绘制刻度线\n    c.lineTo(30,i*80+60); \n    c.stroke(); \n} \nvar labels = ["JAN","FEB","MAR","APR","MAY"]; \n//draw horiz text \nfor(var i=0; i<5; i++) { \n    c.fillText(labels[i], 50+ i*100, 475); 绘制x轴\n} \n')])])]),t("h2",{attrs:{id:"绘制饼图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#绘制饼图","aria-hidden":"true"}},[a._v("#")]),a._v(" 绘制饼图")]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<html> \n<body> \n<canvas width="500" height="500" id="canvas"></canvas> \n<script> \n//initialize data set \nvar data = [ 100, 68, 20, 30, 100 ]; \n \nvar canvas = document.getElementById(\'canvas\'); \nvar c = canvas.getContext(\'2d\'); \n//draw background \nc.fillStyle = "white"; \nc.fillRect(0,0,500,500); \n //a list of colors \nvar colors = [ "orange", "green", "blue", "yellow", "teal"]; \n \n //calculate total of all data \n var total = 0; \n for(var i=0; i<data.length; i++) { \n     total += data[i]; \n } \n //draw pie data \nvar prevAngle = 0; \nfor(var i=0; i<data.length; i++) { \n    //fraction that this pieslice represents \n    var fraction = data[i]/total; \n    //calc starting angle \n    var angle = prevAngle + fraction*Math.PI*2; \n     \n    //draw the pie slice \n    c.fillStyle = colors[i]; \n     \n    //create a path \n    c.beginPath(); \n    c.moveTo(250,250); \n    c.arc(250,250, 100, prevAngle, angle, false); \n    c.lineTo(250,250); \n     \n    //fill it \n    c.fill(); \n     \n    //stroke it \n    c.strokeStyle = "black"; \n    c.stroke(); \n     \n    //update for next time through the loop \n    prevAngle = angle; \n    //draw centered text \nc.fillStyle = "black"; \nc.font = "24pt sans-serif"; \nvar text = "Sales Data from 2025"; \nvar metrics = c.measureText(text); \nc.fillText(text, 250-metrics.width/2, 400); \n} \n<\/script> \n</body> \n</html> \n')])])])])}],!1,null,null,null);n.default=l.exports}}]);