(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{159:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"django-踩坑记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django-踩坑记录","aria-hidden":"true"}},[e._v("#")]),e._v(" Django 踩坑记录")]),a("h3",{attrs:{id:"配置python环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置python环境","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置python环境")]),a("p",[e._v("*** IDE使用pycharm\n*** 全局安装python3版本\n*** 使用 python3 自带的venv命令创建虚拟环境，这样可以将自己项目中所用到的所有的依赖包统一管理，不会和其他的python环境产生冲突\n*** pip install django 安装django")]),a("h3",{attrs:{id:"微服务跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微服务跨域问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 微服务跨域问题")]),a("p",[a("code",[e._v("django中每一个应用都可以通过一个python包来进行配置，比如在app包中创建一个middleware.py格式的文件，然后声明下面这个类")])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("from django.utils.deprecation import MiddlewareMixin\n\nclass DisableCSRF(MiddlewareMixin):\n    def process_request(self, request):\n        setattr(request, '_dont_enforce_csrf_checks', True)\n")])])]),a("p",[a("code",[e._v("在setting.py 的 MIDDLEWARE 中添加 app.middleware.DisableCSRF")])]),a("h3",{attrs:{id:"json格式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json格式转换","aria-hidden":"true"}},[e._v("#")]),e._v(" json格式转换")]),a("p",[e._v("Model.objects.all()等查询语句输出的都是QuerySet类型的值，需要将这个值转换成字典的格式, 引入django核心库中的serializers进行转换。")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("from django.core import serializers\ndata = json.loads(serializers.serialize('json', query_set))\n")])])]),a("h3",{attrs:{id:"数据表创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据表创建","aria-hidden":"true"}},[e._v("#")]),e._v(" 数据表创建")]),a("p",[e._v("django会在应用中寻找models文件， 所有继承models.Model的类都会被当做是一个数据表，类中的属性对应着表中的字段\n在setting.py 的 INSTALLED_APPS 中进行表的数据表的注册\n然后使用migrate命令进行数据表的迁移")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("from django.db import models\nimport  datetime\nfrom django.utils import timezone\n# Create your models here.\nclass Question(models.Model):\n    question_text = models.CharField(max_length=200)\n    pub_datee = models.DateTimeField('date publish')\n    def __str__(self):\n        return self.question_text\n    def was_published_recently(self):\n        return self.pub_datee >= timezone.now() - datetime.timedelta(days=1)\n\nclass Choice(models.Model):\n    question = models.ForeignKey(Question, on_delete=models.CASCADE)\n    choice_text = models.CharField(max_length=200)\n    votes = models.IntegerField(default=0)\n    def __str__(self):\n        return self.choice_text，\n\n")])])])])}],!1,null,null,null);t.default=n.exports}}]);