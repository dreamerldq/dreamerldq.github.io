(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{152:function(a,e,t){"use strict";t.r(e);var r=t(0),v=Object(r.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"微信小程序开发总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序开发总结","aria-hidden":"true"}},[a._v("#")]),a._v(" 微信小程序开发总结")]),t("p",[a._v("新工作开发微信小程序，由于时间紧，没有时间看一些小程序的框架，就用小程序原生组件进行开发。\n目前市场上比较活跃的小程序框架有"),t("code",[a._v("mpvue")]),a._v(", 完全采用vue的开发方式，有兴趣的同学可以去看官方文档（美团点评出品）")]),t("p",[a._v("小程序寄生于微信这个交流平台，提供的很多api都能够和微信的一些功能进行交互。")]),t("p",[a._v("技术上小程序也提供了类似于vue的模板，提供了一些常用的操作符，有vue开发经验的同学，开发小程序基本上属于o门槛了。")]),t("h3",{attrs:{id:"视图组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图组件","aria-hidden":"true"}},[a._v("#")]),a._v(" 视图组件")]),t("p",[a._v("小程序提供了轮播视图、滚动视图、静态视图等视图组件，可以完全满足移动端内容展示的需求。")]),t("h3",{attrs:{id:"表单组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表单组件","aria-hidden":"true"}},[a._v("#")]),a._v(" 表单组件")]),t("p",[a._v("小程序提供了大量跟系统原生组件具备同样功能的组件。")]),t("h3",{attrs:{id:"页面跳转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面跳转","aria-hidden":"true"}},[a._v("#")]),a._v(" 页面跳转")]),t("p",[a._v("小程序有两种页面跳转的方式，组件跳转"),t("code",[a._v("<navigator>")]),a._v(",和api跳转"),t("code",[a._v("wx.navigateTo")]),a._v("等\n这样你既可以在代码中控制页面的跳转，还可以在视图界面中通过点击元素来实现跳转。")]),t("p",[a._v("小程序的跳转是具有层级限定的，目前限定是10级，也就是说从你的第一次跳转开始，在不返回的情况下，最多只能跳转10次。 每一次跳转，都会被记录在栈中，栈的上限就是10，但栈满了后，就不能继续添加，所以也就不能够跳转。 既然他是栈，那么久有出栈的方式。 "),t("code",[a._v("wx.redirectTo")]),a._v("api 关闭当前页面，跳转到新的页面； "),t("code",[a._v("wx.navigateBack")]),a._v(" 返回上一页面，或者返回多级页面； "),t("code",[a._v("wx.switchTab")]),a._v(" 实现app.json文件中定义的底部导航的跳转，跳转完成后会清空栈。\n跳转页面可以携带参数，参数跟在跳转的url后面就好。 跳转到的页面，可以通过生命周期函数，获得传递过来的参数，进行一些操作。")]),t("p",[t("code",[a._v("<navigator></navigator>")]),a._v(" 这个组件可以通过"),t("code",[a._v("open-type")]),a._v("属性来设置跳转的方式。大体上这个组件中所有的属性和跳转api中需要提供的Object一致，唯一的区别在于，可以用跳转组件来跳转到不同的小程序中（小程序必须是同一公司主体下）。通过设置"),t("code",[a._v("app-id, path, extra-data")]),a._v("等属性来实现。")]),t("h3",{attrs:{id:"小程序登陆流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小程序登陆流程","aria-hidden":"true"}},[a._v("#")]),a._v(" 小程序登陆流程")]),t("p",[t("img",{attrs:{src:"https://mp.weixin.qq.com/debug/wxadoc/dev/image/api-login.jpg?t=2018612",alt:"avatar"}}),a._v("\n如图官方图所示，首先调用小程序提供的登陆接口 "),t("code",[a._v("wx.login")]),a._v("，这个接口会返回一个临时的登陆凭证 "),t("code",[a._v("code")]),a._v("。\n然后再通过"),t("code",[a._v("wx.request")]),a._v("， 然后再将这个code传给开发者服务器，开发者服务器会结合code、appid、appsceret，去请求微信服务接口，返回一个  "),t("code",[a._v("openid 和 session_key")]),a._v("。这个openid就是用户的身份凭证。开发者服务器就可以通过这个openid，然后自己制定一套验证登陆的规则，给客服端返回这个规则，保存在本地Storage中，下次发送request请求的时候，携带这这个规则发送给服务器，然后服务器做出判断，决定返回什么样的业务数据。")]),t("p",[a._v("简单来说，就是用户发送登陆请求给开发者服务器 ——> 开发者服务器发送请求到微信服务器   ——> 微信服务器返回id标识 ——> 然后再将这个id依次传回去``")])])}],!1,null,null,null);e.default=v.exports}}]);