(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{163:function(a,e,n){"use strict";n.r(e);var t=n(0),s=Object(t.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"react-cloneelement使用案例-实现单选框组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-cloneelement使用案例-实现单选框组","aria-hidden":"true"}},[a._v("#")]),a._v(" React.cloneElement使用案例:实现单选框组")]),n("p",[a._v("这个方法通常来为React组件添加属性和子元素。\n比如要实现一个Radio列表：")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("<HuaRadio.RadioGroup\n          value={this.state.currentRadio}\n          onChange={this.radioGroupChange}\n        >\n          <HuaRadio value={1}>Radio</HuaRadio>\n          <HuaRadio value={2}>Radio2</HuaRadio>\n          <HuaRadio value={3}>Radio3</HuaRadio>\n          <HuaRadio value={4}>Radio4</HuaRadio>\n  </HuaRadio.RadioGroup>\n")])])]),n("p",[a._v("当点击每一个HuaRadio组件的时候，都应该将currentRadio的值设置为被点击的HuaRadio的value值，并且当value的值和currentRadio的值对应是，HuaRadio组件被选中，但是在这里我们并没有对HuaRadio组件添加点击事件。接下来在HuaRadio.RadioGroup组件中，我们将对每一个Radio进行二次迭代开发，来实现上述的功能。")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("class RadioGroup extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    enhanceChidren = () => {\n        return this.props.children.map((child) => {\n           return  React.cloneElement(child,\n            {\n                onRadioChange: this.props.onChange,\n                currentValue: this.props.value,\n                key: `radio-${child.props.value}`\n            })\n        })\n    }\n    render(){\n        return(\n           <React.Fragment>\n               {this.enhanceChidren()}\n           </React.Fragment>\n        )\n    }\n}\n")])])]),n("p",[a._v("对每一个HuaRadio组件添加onRadioChange、currentValue、key等属性。\nReact.cloneElement 接受3个参数，第一个是标签名（html元素标签，或者React组件名），第二个是属性props对象，第三个是children。")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("export default class HuaRdio extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    onChange = (value) => {\n        this.props.onRadioChange(value)\n    }\n    render(){\n        const checked = this.props.currentValue === this.props.value\n        return(\n            <div className={styles.container}>\n                <label htmlFor={this.props.children}>\n                    <div className={styles.radioLabel}>\n                        {checked ? <div className={styles.checkedRadio}></div> :\n                        null}\n                    </div>\n                </label>\n                {this.props.currentValue ?\n                    <input className={styles.radio} onChange={this.onChange.bind(this, this.props.value)} id={this.props.children} type='radio' checked={checked }/> :\n                    <input className={styles.radio}  type='radio' />}\n                \n                <span>{this.props.children}</span>\n            </div>\n        )\n    }\n}\n")])])])])}],!1,null,null,null);e.default=s.exports}}]);