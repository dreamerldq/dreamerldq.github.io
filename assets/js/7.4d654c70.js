(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{160:function(s,e,t){"use strict";t.r(e);var n=t(0),a=Object(n.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"css-in-js-（react-jss）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-in-js-（react-jss）","aria-hidden":"true"}},[s._v("#")]),s._v(" CSS in JS （react-jss）")]),t("p",[s._v("由于CSS和JS相互独立，所以想要动态的根据JS中的变量来改变css中的值无法实现。除非将CSS写在JS中，例如： 写成行内样式或者React Style，但是在行内样式中，有存在很多的限制：不能操作伪类，不能使用css检查器等。")]),t("p",[t("code",[s._v("下面会实现一个React Button 组件，通过props传递不同的眼神值，在hover或者active时，展现出不同的颜色和状态")])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import injectSheet from 'react-jss';\nconst myStyles = {\n  myButton: {\n    background: ({ disabled, type }) => (disabled ? '#d9d9d9' : type ? colors[type].default : '#fff'),\n    color: ({ type }) => type && '#fff',\n    '&:hover': {\n      background: ({ disabled, type }) => (disabled ? '#d9d9d9' : colors[type] ? colors[type].hover : '#fff'),\n      border: ({ disabled, type }) => ( colors[type] ? 'none' : 'solid 1px #1890ff'),    },\n    '&:active': {\n      background: ({ disabled, type }) => (disabled ? '#d9d9d9' : colors[type] ? colors[type].click : '#fff'),\n      color: ({ type }) => type && '#fff',\n      border: ({ disabled, type }) => ( colors[type] ? 'none' : 'solid 1px #0058aa'),    },\n  },\n};\nexport default injectSheet(myStyles)(HuaButton);\n")])])]),t("p",[s._v("React-jss是一个Css in Js 的库. 不止能够直接设置CSS的属性，还能够使用function values， 所接受到的参数就是React组件接收到的props。")]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import classnames from 'classnames';\nclass HuaButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      onClick, disabled, children, classes,\n    } = this.props;\n    return (\n          <button\n              onClick={onClick}\n              disabled={disabled}\n              className={disabled ? classnames(styles.hua_button_disable, classes.myButton) : classnames(styles.hua_button_normal, classes.myButton)}\n              >\n              {children}\n          </button>\n    );\n  }\n}\n")])])]),t("p",[s._v("classnames是一个用来连接多个class的库。")])])}],!1,null,null,null);e.default=a.exports}}]);